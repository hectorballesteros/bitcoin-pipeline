version: '3'
services:

  frontend:
    build:
      context: .
      dockerfile: frontend/frontend.dockerfile
    ports:
      -  "127.0.0.1:3000:3000"
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
     - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
     - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "bitcoin:1:1"


    restart: always
    depends_on:
    - zookeeper
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock

  cassandra:
    image: cassandra:latest
    ports:
      - "9042:9042"
    volumes:
      - ./cassandra/data:/var/lib/cassandra/data
    restart: always
    network_mode: "host"
  api_subscriber:
    build:
        context: .
        dockerfile: api_subscriber/api_subscriber.dockerfile
    depends_on:
     - kafka
    restart: always
    network_mode: "host"
  load_data:
    build:
        context: .
        dockerfile: load_data/load_data.dockerfile
    depends_on:
     - kafka
     - cassandra
    restart: always
    network_mode: "host"
  backend:
    build:
        context: .
        dockerfile: backend/backend.dockerfile
    depends_on:
        - cassandra
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9042" ]
      interval: 120s
      timeout: 10s
      retries: 5
    ports:
      - "8000:8000"
    restart: always
    network_mode: "host"

